generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String? // For email/password auth
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  drafts    Draft[]
  posts     Post[]
  ratings   Rating[]

  @@map("users")
}

model Post {
  id          String    @id @default(cuid())
  title       String
  content     String
  summary     String?
  slug        String    @unique
  published   Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  authorId    String
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  ratings     Rating[]

  @@map("posts")
}

model Draft {
  id        String   @id @default(cuid())
  title     String
  content   String
  topic     String?
  tone      String   @default("professional")
  length    String   @default("medium")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("drafts")
}

model Rating {
  id        String   @id @default(cuid())
  value     Int // 1-5
  userId    String
  postId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, postId])
  @@map("ratings")
}
